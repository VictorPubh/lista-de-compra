interface Props {
	duration: number;
	listener: () => any | void | undefined;
}
export default function longpress(node: HTMLButtonElement, props: Props) {
	function mouseDown() {
		const timeout = setTimeout(() => {
			props.listener();
		}, props.duration);

		function cancel() {
			clearTimeout(timeout);
			node.removeEventListener('mousemove', cancel);
			node.removeEventListener('mouseup', cancel);
		}

		node.addEventListener('mousemove', cancel);
		node.addEventListener('mouseup', cancel);
	}

	node.addEventListener('mousedown', mouseDown);

	return {
		destroy: () => {
			node.removeEventListener('mousedown', mouseDown);
		},
	};
}
